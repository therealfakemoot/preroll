// Code generated by "stringer -type=tokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[errorToken-0]
	_ = x[eofToken-1]
	_ = x[keepHighestToken-2]
	_ = x[keepLowestToken-3]
	_ = x[dropHighestToken-4]
	_ = x[dropLowestToken-5]
	_ = x[explodeToken-6]
	_ = x[dieToken-7]
	_ = x[numberToken-8]
	_ = x[additionToken-9]
	_ = x[subtractionToken-10]
	_ = x[facesOpenToken-11]
	_ = x[facesCloseToken-12]
	_ = x[faceToken-13]
}

const _tokenType_name = "errorTokeneofTokenkeepHighestTokenkeepLowestTokendropHighestTokendropLowestTokenexplodeTokendieTokennumberTokenadditionTokensubtractionTokenfacesOpenTokenfacesCloseTokenfaceToken"

var _tokenType_index = [...]uint8{0, 10, 18, 34, 49, 65, 80, 92, 100, 111, 124, 140, 154, 169, 178}

func (i tokenType) String() string {
	if i < 0 || i >= tokenType(len(_tokenType_index)-1) {
		return "tokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenType_name[_tokenType_index[i]:_tokenType_index[i+1]]
}
